// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropDownField component should render a question 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropDownField
    question={
      Object {
        "default_value": "U",
        "description": "",
        "empty_value": "U",
        "hide_empty_option": true,
        "possible_answers": Array [
          Object {
            "display_value": "Unspecified",
            "id": "U",
            "value": "Unspecified",
          },
          Object {
            "display_value": "Male",
            "id": "M",
            "value": "Male",
          },
          Object {
            "display_value": "Female",
            "id": "F",
            "value": "Female",
          },
        ],
        "read_only": false,
        "required": true,
        "title": "Gender",
        "type": "dropdown",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <select
        className={undefined}
        disabled={false}
        onBlur={undefined}
        onChange={[Function]}
        value="U"
      >
        <option
          value="U"
        >
          Unspecified
        </option>
        <option
          value="M"
        >
          Male
        </option>
        <option
          value="F"
        >
          Female
        </option>
      </select>,
      "className": "dxp-dropdown",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          Array [
            <option
              value="U"
            >
              Unspecified
            </option>,
            <option
              value="M"
            >
              Male
            </option>,
            <option
              value="F"
            >
              Female
            </option>,
          ],
        ],
        "className": undefined,
        "disabled": false,
        "onBlur": undefined,
        "onChange": [Function],
        "value": "U",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": "U",
          "nodeType": "host",
          "props": Object {
            "children": "Unspecified",
            "value": "U",
          },
          "ref": null,
          "rendered": "Unspecified",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "M",
          "nodeType": "host",
          "props": Object {
            "children": "Male",
            "value": "M",
          },
          "ref": null,
          "rendered": "Male",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "F",
          "nodeType": "host",
          "props": Object {
            "children": "Female",
            "value": "F",
          },
          "ref": null,
          "rendered": "Female",
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <select
          className={undefined}
          disabled={false}
          onBlur={undefined}
          onChange={[Function]}
          value="U"
        >
          <option
            value="U"
          >
            Unspecified
          </option>
          <option
            value="M"
          >
            Male
          </option>
          <option
            value="F"
          >
            Female
          </option>
        </select>,
        "className": "dxp-dropdown",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            Array [
              <option
                value="U"
              >
                Unspecified
              </option>,
              <option
                value="M"
              >
                Male
              </option>,
              <option
                value="F"
              >
                Female
              </option>,
            ],
          ],
          "className": undefined,
          "disabled": false,
          "onBlur": undefined,
          "onChange": [Function],
          "value": "U",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": "U",
            "nodeType": "host",
            "props": Object {
              "children": "Unspecified",
              "value": "U",
            },
            "ref": null,
            "rendered": "Unspecified",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "M",
            "nodeType": "host",
            "props": Object {
              "children": "Male",
              "value": "M",
            },
            "ref": null,
            "rendered": "Male",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "F",
            "nodeType": "host",
            "props": Object {
              "children": "Female",
              "value": "F",
            },
            "ref": null,
            "rendered": "Female",
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
